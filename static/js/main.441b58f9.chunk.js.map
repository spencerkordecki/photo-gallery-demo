{"version":3,"sources":["galleryImages.js","components/PhotoGalleryImage/PhotoGalleryImage.js","components/PhotoGallery/PhotoGallery.js","App.js","reportWebVitals.js","index.js"],"names":["images","path","description","alt","author","PhotoGalleryImage","props","captionText","image","photoClassName","captionClassName","touchstartX","touchendX","isActive","className","src","onTouchStart","e","changedTouches","screenX","onTouchEnd","setNextPhotoActive","setPreviousPhotoActive","PhotoGallery","state","activeIndex","handlePreviousClick","bind","handleNextClick","previousButton","React","createRef","nextButton","newIndex","this","length","setState","current","disabled","handleTouchStart","handleTouchEnd","onClick","aria-label","ref","map","index","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.441b58f9.chunk.js","sourcesContent":["const images = [\n  {\n    path: 'https://picsum.photos/id/527/800/400',\n    description: 'Bespoke Manufacturing',\n    alt: 'Slab of wood converted into a workbench by Jeff Sheldon',\n    author: 'Jeff Sheldon'\n  },\n  {\n    path: 'https://picsum.photos/id/70/800/400',\n    description: 'Down the Path',\n    alt: 'Foggy, tree-lined path by Dorothy Lin',\n    author: 'Dorothy Lin'\n  },\n  {\n    path: 'https://picsum.photos/id/543/800/400',\n    description: 'Clearing the Mind',\n    alt: 'Solo hiker in the woods on a foggy morning by Ali Inay',\n    author: 'Ali Inay'\n  }\n];\n\nexport default images;\n","import './PhotoGalleryImage.css';\n\nfunction PhotoGalleryImage(props) {\n  const captionText = `\"${props.image.description}\" by ${props.image.author}`;\n  let photoClassName = 'photo';\n  let captionClassName = 'photo__caption';\n  let touchstartX = 0;\n  let touchendX = 0;\n\n  // Hide all images and captions that are not currently active\n  if (!props.isActive) {\n    photoClassName = `${photoClassName} hidden`;\n    captionClassName = `${captionClassName} hidden`;\n  }\n\n  /**\n   * Set the beginning X axis value when the user starts to swipe.\n   *\n   * @param {Object} e TouchEvent\n   */\n  const handleTouchStart = (e) => {\n    touchstartX = e.changedTouches[0].screenX;\n  };\n\n  /**\n   * Set the end X axis value when the user is finished swiping. If\n   * the end value is less than the start value, the user has swiped\n   * left and the next photo will be displayed. If the end value is\n   * greater than the start value, the user has swiped right and the\n   * previous photo will be displayed.\n   *\n   * @param {Object} e TouchEvent\n   */\n  const handleTouchEnd = (e) => {\n    touchendX = e.changedTouches[0].screenX;\n\n    if (touchendX < touchstartX) {\n      props.setNextPhotoActive();\n    } else if (touchendX > touchstartX) {\n      props.setPreviousPhotoActive();\n    }\n  };\n\n  return (\n    <article className={photoClassName}>\n      <img\n        className=\"photo__image\"\n        src={props.image.path}\n        alt={props.image.alt}\n        onTouchStart={handleTouchStart}\n        onTouchEnd={handleTouchEnd}\n      ></img>\n      <p className={captionClassName}>{captionText}</p>\n    </article>\n  );\n}\n\nexport default PhotoGalleryImage;\n","import './PhotoGallery.css';\nimport React from 'react';\nimport images from '../../galleryImages.js';\nimport PhotoGalleryImage from '../PhotoGalleryImage/PhotoGalleryImage.js';\n\n/**\n * Component that takes in an array of images from galleryImages.js and\n * displays them in a slider that has the ability to move to the next\n * or previous image by clicking the appropriate button or swiping left/right\n * on mobile.\n */\nclass PhotoGallery extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      activeIndex: 0\n    };\n\n    this.handlePreviousClick = this.handlePreviousClick.bind(this);\n    this.handleNextClick = this.handleNextClick.bind(this);\n    this.setPreviousPhotoActive = this.setPreviousPhotoActive.bind(this);\n    this.setNextPhotoActive = this.setNextPhotoActive.bind(this);\n\n    this.previousButton = React.createRef();\n    this.nextButton = React.createRef();\n  }\n\n  /**\n   * Checks the current active index and sets the index to (current - 1).\n   * If the new index is out of range, set the active photo to the last\n   * photo in the array.\n   */\n  setPreviousPhotoActive() {\n    let newIndex;\n\n    if (this.state.activeIndex === 0) {\n      newIndex = images.length - 1;\n    } else {\n      newIndex = this.state.activeIndex - 1;\n    }\n\n    // Update the currently active photo and enable the previous button\n    this.setState(\n      {\n        activeIndex: newIndex\n      },\n      () => {\n        this.previousButton.current.disabled = false;\n      }\n    );\n  }\n\n  /**\n   * Checks the current active index and sets the index to (current + 1).\n   * If the new index is out of range, set the active photo to the first\n   * photo in the array.\n   */\n  setNextPhotoActive() {\n    let newIndex;\n    if (this.state.activeIndex === images.length - 1) {\n      newIndex = 0;\n    } else {\n      newIndex = this.state.activeIndex + 1;\n    }\n\n    // Update the currently active photo and enable the next button\n    this.setState(\n      {\n        activeIndex: newIndex\n      },\n      () => {\n        this.nextButton.current.disabled = false;\n      }\n    );\n  }\n\n  /**\n   * Display the previous photo in the gallery and disable\n   * the previous photo button to prevent spam clicking the\n   * component into an inaccurate state.\n   */\n  handlePreviousClick() {\n    this.previousButton.current.disabled = true;\n    this.setPreviousPhotoActive();\n  }\n\n  /**\n   * Display the next photo in the gallery and disable\n   * the next photo button to prevent spam clicking the\n   * component into an inaccurate state.\n   */\n  handleNextClick() {\n    this.nextButton.current.disabled = true;\n    this.setNextPhotoActive();\n  }\n\n  render() {\n    return (\n      <div\n        className=\"gallery\"\n        onTouchStart={this.handleTouchStart}\n        onTouchEnd={this.handleTouchEnd}\n      >\n        <button\n          className=\"gallery__button gallery__button--prev\"\n          onClick={this.handlePreviousClick}\n          aria-label=\"Display Previous Photo\"\n          ref={this.previousButton}\n        >\n          {'<'}\n        </button>\n        <ul className=\"gallery__images\">\n          {images.map((image, index) => {\n            return (\n              <li className=\"gallery__item\" key={index}>\n                <PhotoGalleryImage\n                  image={image}\n                  isActive={this.state.activeIndex === index}\n                  setNextPhotoActive={this.setNextPhotoActive}\n                  setPreviousPhotoActive={this.setPreviousPhotoActive}\n                ></PhotoGalleryImage>\n              </li>\n            );\n          })}\n        </ul>\n        <button\n          className=\"gallery__button gallery__button--next\"\n          onClick={this.handleNextClick}\n          aria-label=\"Display Next Photo\"\n          ref={this.nextButton}\n        >\n          {'>'}\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default PhotoGallery;\n","import './App.css';\nimport PhotoGallery from './components/PhotoGallery/PhotoGallery.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">React Carousel Demo</header>\n      <PhotoGallery></PhotoGallery>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}